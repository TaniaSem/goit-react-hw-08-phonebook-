{"version":3,"file":"static/js/777.2af5334b.chunk.js","mappings":"uQAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,2KAUVE,EAAQF,EAAAA,GAAAA,MAAH,4HAQLG,GAAQH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,uHAOLK,EAAYL,EAAAA,GAAAA,OAAH,8SAmBTM,GAAWN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,6C,SCzCfQ,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGNC,EAASC,EAAAA,KAAaC,MAAM,CAChCL,KAAMI,EAAAA,KAAaE,IAAI,GAAGC,WAC1BN,MAAOG,EAAAA,KAAaH,QAAQM,WAC5BL,SAAUE,EAAAA,KAAaE,IAAI,GAAGE,IAAI,IAAID,aAG3BE,EAAQ,WACnB,IAAMC,GAAWC,EAAAA,EAAAA,MA+BjB,OACE,SAAC,KAAD,CACEZ,cAAeA,EACfa,iBAAkBT,EAClBU,SAjCiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BC,QAAQC,IAAIH,GACZJ,GACEQ,EAAAA,EAAAA,IAAS,CACPlB,KAAMc,EAAOd,KACbC,MAAOa,EAAOb,MACdC,SAAUY,EAAOZ,YAGrBa,GACD,EAoBC,UAKE,UAACzB,EAAD,CAAY6B,aAAa,MAAzB,WACE,UAAC1B,EAAD,CAAO2B,QAAQ,OAAf,kBAEE,SAAC1B,EAAD,CACE2B,KAAK,OACLrB,KAAK,UAGP,SAACH,EAAD,CAAUyB,UAAU,MAAMtB,KAAK,aAEjC,UAACP,EAAD,CAAO2B,QAAQ,QAAf,mBAEE,SAAC1B,EAAD,CACE2B,KAAK,QACLrB,KAAK,WAGP,SAACH,EAAD,CAAUyB,UAAU,MAAMtB,KAAK,cAEjC,UAACP,EAAD,CAAO2B,QAAQ,WAAf,sBAEE,SAAC1B,EAAD,CACE2B,KAAK,WACLrB,KAAK,cAGP,SAACH,EAAD,CAAUyB,UAAU,MAAMtB,KAAK,iBAEjC,SAACJ,EAAD,CAAWyB,KAAK,SAAhB,wBAIP,ECtFYE,EAAahC,EAAAA,GAAAA,IAAH,gHCSvB,EARqB,WACnB,OACE,SAACgC,EAAD,WACE,SAACd,EAAD,KAGL,C","sources":["components/Logup/Logup.styled.js","components/Logup/Logup.js","pages/Registration/Registration.styled.js","pages/Registration/Registration.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormStyled = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  width: 400px;\n  padding: 20px;\n  border: 1px solid #064927;\n  border-radius: 4px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nexport const Input = styled(Field)`\n  font-size: 16px;\n  padding: 5px 15px;\n  border: 1px solid #2c7953;\n  border-radius: 4px;\n`;\n\nexport const SubmitBtn = styled.button`\n  display: block;\n  width: 200px;\n  margin-top: 10px;\n  padding: 5px;\n  border: 1px solid #2c7953;\n  border-radius: 4px;\n  cursor: pointer;\n\n  color: #064927;\n  background-color: #fff;\n  font-size: 16px;\n  font-weight: 500;\n\n  :hover {\n    font-weight: 600;\n  }\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  color: orangered;\n`;\n","import { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/authorization/authOperatoins';\nimport * as yup from 'yup';\nimport { ErrorMsg, FormStyled, Input, Label, SubmitBtn } from './Logup.styled';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst schema = yup.object().shape({\n  name: yup.string().min(4).required(),\n  email: yup.string().email().required(),\n  password: yup.string().min(5).max(15).required(),\n});\n\nexport const Logup = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    console.log(values);\n    dispatch(\n      register({\n        name: values.name,\n        email: values.email,\n        password: values.password,\n      })\n    );\n    resetForm();\n  };\n\n  //   handleChange = e => {\n  //     const { name, value } = e.currentTarget;\n\n  //     this.setState({ [name]: value });\n  //   };\n\n  //   handleSubmit = e => {\n  //     e.preventDefault();\n  //     this.props.onSubmit(this.state);\n  //     this.reset();\n  //   };\n\n  //   reset = () => {\n  //     this.setState({ name: '', number: '' });\n  //   };\n  // const { name, number } = this.state;\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormStyled autoComplete=\"off\">\n        <Label htmlFor=\"name\">\n          Name\n          <Input\n            type=\"name\"\n            name=\"name\"\n            //   value={name}\n          />\n          <ErrorMsg component=\"div\" name=\"name\" />\n        </Label>\n        <Label htmlFor=\"email\">\n          Email\n          <Input\n            type=\"email\"\n            name=\"email\"\n            //   value={name}\n          />\n          <ErrorMsg component=\"div\" name=\"email\" />\n        </Label>\n        <Label htmlFor=\"password\">\n          Password\n          <Input\n            type=\"password\"\n            name=\"password\"\n            //   value={number}\n          />\n          <ErrorMsg component=\"div\" name=\"password\" />\n        </Label>\n        <SubmitBtn type=\"submit\">Log up</SubmitBtn>\n      </FormStyled>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const RegistrBox = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { Logup } from 'components/Logup/Logup';\nimport { RegistrBox } from './Registration.styled';\n\nconst Registration = () => {\n  return (\n    <RegistrBox>\n      <Logup />\n    </RegistrBox>\n  );\n};\n\nexport default Registration;\n"],"names":["FormStyled","styled","Form","Label","Input","Field","SubmitBtn","ErrorMsg","ErrorMessage","initialValues","name","email","password","schema","yup","shape","min","required","max","Logup","dispatch","useDispatch","validationSchema","onSubmit","values","resetForm","console","log","register","autoComplete","htmlFor","type","component","RegistrBox"],"sourceRoot":""}